name: Build
on:
  push:
    branches-ignore:
      - main

env:
  CIRCLE_BUILD_NUM: ${{ github.run_id }}
  CIRCLE_BRANCH: ${{ github.ref_name }}

permissions:
  id-token: write
  contents: write  # semantic-release-dry verifies the write permissions

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - run: npm install
      - run: npm test
        env:
          GOOGLE_CLIENT_EMAIL: ${{ secrets.GOOGLE_CLIENT_EMAIL }}
          GOOGLE_PRIVATE_KEY: ${{ secrets.GOOGLE_PRIVATE_KEY }}
          GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  branch-deploy:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - run: npm install

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::118435662149:role/helix-gh-deploy-config-service
      - name: Fetch AWS Secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          parse-json-secrets: true
          secret-ids: |
            /helix/github-action-secrets
      # see https://github.com/aws-actions/aws-secretsmanager-get-secrets/issues/11
      - name: unprefix variables
        run: |
          for variable in "${!_HELIX_GITHUB_ACTION_SECRETS_@}"; do 
            echo "${variable#_HELIX_GITHUB_ACTION_SECRETS_}=${!variable}" >> $GITHUB_ENV
          done

      - name: Branch Deployment
        run: npm run deploy-ci
        env:
          HLX_TEST_HEADERS: ${{ secrets.HLX_TEST_HEADERS }}
          GOOGLE_CLIENT_EMAIL: ${{ secrets.GOOGLE_CLIENT_EMAIL }}
          GOOGLE_PRIVATE_KEY: ${{ secrets.GOOGLE_PRIVATE_KEY }}
          GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
      - name: Post-Deployment Integration Test
        run: npm run test-postdeploy
        env:
          HLX_TEST_HEADERS: ${{ secrets.HLX_TEST_HEADERS }}
          GOOGLE_CLIENT_EMAIL: ${{ secrets.GOOGLE_CLIENT_EMAIL }}
          GOOGLE_PRIVATE_KEY: ${{ secrets.GOOGLE_PRIVATE_KEY }}
          GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
